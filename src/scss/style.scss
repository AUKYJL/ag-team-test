@use "sass:math";

// Подключение миксинов ========================================================================================================================================================
@import "base/mixins";

//Подключение шрифтов ========================================================================================================================================================
//Здесь @import()
//&display=swap - Добавить если подключаем через @import()

// Подключение шрифтов локально
@import "fonts/fonts";

// Подключение иконочного шрифта ==============================================================================================================================================================================================================================================================================
@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройка шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "GothaPro";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию с макета

$mainColor: #fff;
$siteBgDark: #1b1d21;
$siteBgMedium: #202329;
$siteBgLight: #2e3135;

$interfaceAccentRed: #ec1c24;
$interfaceAccentRedDim: #c3020a;
$interfaceAccentGreen: #27ae60;
$interfaceBgLight: #e4f9ed;

$productAccentOrange: #f2982e;
$productAccentRed: #f24329;
$productBgDark: #31333a;
$productAccentYellow: #ff7316;
$productAccentGreen: #c5c958;
$productAccentPurple: #8453a2;
$productAccentBlue: #41467d;

// Налаштування адаптивної сітки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина макета (ширина фрейма)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1180;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк поинты
$pc: em(
  $containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк поинтам (контейнер изменяет свою ширину по брейк поинту)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуленние ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили для body ============================================================================================================================================================================================================================================================================================================================================================================================

body {
  background-color: $siteBgDark;
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }

  // Сайт загружен
  .loaded & {
  }
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;

  @supports (overflow: clip) {
    overflow: clip;
  }

  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }

  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}

// Для того чтобы не ломался слайдер при ресайзе
iframe#webpack-dev-server-client-overlay {
  display: none !important;
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться к
всем классам, содержащих *__container
К примеру header__container, main__container и т.п.
Сниппет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Чуйна
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
      margin: 0 auto;
    }

    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue(
          "padding-left",
          math.div($containerPadding, 2),
          15
        );
        @include adaptiveValue(
          "padding-right",
          math.div($containerPadding, 2),
          15
        );
      }
    }
  }
} @else {
  // Брейк поинтами
  [class*="__container"] {
    margin: 0 auto;

    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }

    @media (max-width: $tablet) {
      max-width: rem(750);
    }

    @media (max-width: $mobile) {
      max-width: none;

      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных классов
// Для подключения/выключения конкретных стилей смотрите base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";
@import "base/popup";

// Подключение стилей отдельных страниц
@import "home";
